{"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/v1/status": {"get": {"summary": "Status", "operationId": "status_api_v1_status_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/manifest": {"post": {"summary": "Manifest Post", "operationId": "manifest_post_api_v1_manifest_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DepsolveItem"}}}, "required": true}, "responses": {"201": {"description": "Depsolve tasks created", "content": {"application/json": {"schema": {"title": "Response Manifest Post Api V1 Manifest Post", "type": "array", "items": {"$ref": "#/components/schemas/TaskState"}}, "example": [{"task_id": "some_task_id", "state": "PENDING"}]}}}, "404": {"description": "None of repositories requested are not allowed for depsolving.", "content": {"application/json": {"example": {"details": "None of [repo_id] are allowed for depsolving."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/manifest/{repo_id}": {"get": {"summary": "Manifest Get", "operationId": "manifest_get_api_v1_manifest__repo_id__get", "parameters": [{"required": true, "schema": {"title": "Repo Id", "type": "string"}, "name": "repo_id", "in": "path"}], "responses": {"200": {"description": "Depsolved content for repo_id found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DepsolverResult"}, "example": {"repo_id": "foo-bar-repo", "content": [{"src_repo_id": "source-foo-bar-repo", "unit_type": "RpmUnit", "unit_attr": "filename", "value": "some-filename.rpm"}]}}}}, "404": {"description": "Content for request repository is not available.", "content": {"application/json": {"example": {"detail": "Content for foo-repo not found"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/task/{task_id}": {"get": {"summary": "Task State", "operationId": "task_state_api_v1_task__task_id__get", "parameters": [{"required": true, "schema": {"title": "Task Id", "type": "string"}, "name": "task_id", "in": "path"}], "responses": {"200": {"description": "Task with task_id found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskState"}, "example": {"task_id": "some-task-id", "state": "PENDING"}}}}, "404": {"description": "Task with task_id not found", "content": {"application/json": {"example": {"detail": "Task some-other-task-id not found"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"DepsolveItem": {"title": "DepsolveItem", "required": ["repo_ids"], "type": "object", "properties": {"repo_ids": {"title": "Repo Ids", "type": "array", "items": {"type": "string"}}}}, "DepsolverResult": {"title": "DepsolverResult", "required": ["repo_id", "content"], "type": "object", "properties": {"repo_id": {"title": "Repo Id", "type": "string"}, "content": {"title": "Content", "type": "array", "items": {"$ref": "#/components/schemas/DepsolverResultItem"}}}}, "DepsolverResultItem": {"title": "DepsolverResultItem", "required": ["src_repo_id", "unit_type", "unit_attr", "value"], "type": "object", "properties": {"src_repo_id": {"title": "Src Repo Id", "type": "string"}, "unit_type": {"title": "Unit Type", "type": "string"}, "unit_attr": {"title": "Unit Attr", "type": "string"}, "value": {"title": "Value", "type": "string"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "TaskState": {"title": "TaskState", "required": ["task_id", "state"], "type": "object", "properties": {"task_id": {"title": "Task Id", "type": "string"}, "state": {"title": "State", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}