{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/v1/status": {"get": {"summary": "Status", "operationId": "status_api_v1_status_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Response Status Api V1 Status Get"}}}}}}}, "/api/v1/manifest": {"post": {"summary": "Manifest Post", "operationId": "manifest_post_api_v1_manifest_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DepsolveItem"}}}, "required": true}, "responses": {"201": {"description": "Depsolve tasks created", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TaskState"}, "type": "array", "title": "Response Manifest Post Api V1 Manifest Post"}, "example": [{"task_id": "some_task_id", "state": "PENDING"}]}}}, "404": {"description": "None of repositories requested are not allowed for depsolving.", "content": {"application/json": {"example": {"details": "None of [repo_id] are allowed for depsolving."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/manifest/{repo_id}": {"get": {"summary": "Manifest Get", "operationId": "manifest_get_api_v1_manifest__repo_id__get", "parameters": [{"name": "repo_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Repo Id"}}], "responses": {"200": {"description": "Depsolved content for repo_id found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DepsolverResult"}, "example": {"repo_id": "foo-bar-repo", "content": [{"src_repo_id": "source-foo-bar-repo", "unit_type": "RpmUnit", "unit_attr": "filename", "value": "some-filename.rpm"}]}}}}, "404": {"description": "Content for request repository is not available.", "content": {"application/json": {"example": {"detail": "Content for foo-repo not found"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/task/{task_id}": {"get": {"summary": "Task State", "operationId": "task_state_api_v1_task__task_id__get", "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Task Id"}}], "responses": {"200": {"description": "Task with task_id found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskState"}, "example": {"task_id": "some-task-id", "state": "PENDING"}}}}, "404": {"description": "Task with task_id not found", "content": {"application/json": {"example": {"detail": "Task some-other-task-id not found"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"DepsolveItem": {"properties": {"repo_ids": {"items": {"type": "string"}, "type": "array", "title": "Repo Ids"}}, "type": "object", "required": ["repo_ids"], "title": "DepsolveItem"}, "DepsolverResult": {"properties": {"repo_id": {"type": "string", "title": "Repo Id"}, "content": {"items": {"$ref": "#/components/schemas/DepsolverResultItem"}, "type": "array", "title": "Content"}}, "type": "object", "required": ["repo_id", "content"], "title": "DepsolverResult"}, "DepsolverResultItem": {"properties": {"src_repo_id": {"type": "string", "title": "Src Repo Id"}, "unit_type": {"type": "string", "title": "Unit Type"}, "unit_attr": {"type": "string", "title": "Unit Attr"}, "value": {"type": "string", "title": "Value"}}, "type": "object", "required": ["src_repo_id", "unit_type", "unit_attr", "value"], "title": "DepsolverResultItem"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "TaskState": {"properties": {"task_id": {"type": "string", "title": "Task Id"}, "state": {"type": "string", "title": "State"}}, "type": "object", "required": ["task_id", "state"], "title": "TaskState"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}